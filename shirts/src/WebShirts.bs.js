// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function price(size) {
  if (typeof size === "number") {
    switch (size) {
      case /* Small */0 :
          return 11.0;
      case /* Medium */1 :
          return 20.0;
      case /* Large */2 :
          return 23.0;
      
    }
  } else {
    var match = size[0];
    if (match !== 1) {
      if (match !== 2) {
        return 40.0;
      } else {
        return 30.0;
      }
    } else {
      return 25.0;
    }
  }
}

function shirtSizeOfString(str) {
  switch (str) {
    case "L" :
        return /* Large */2;
    case "M" :
        return /* Medium */1;
    case "S" :
        return /* Small */0;
    case "XL" :
        return /* Xlarge */[1];
    case "XXL" :
        return /* Xlarge */[2];
    case "XXXL" :
        return /* Xlarge */[3];
    default:
      return ;
  }
}

function calculate(_event) {
  var getValue = function (element) {
    var __x = Belt_Option.map(element, (function (prim) {
            return prim;
          }));
    return Belt_Option.map(__x, (function (prim) {
                  return prim.value;
                }));
  };
  var toInt = function (s) {
    var result;
    try {
      result = Caml_format.caml_int_of_string(s);
    }
    catch (raw_exn){
      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
      if (exn[0] === Caml_builtin_exceptions.failure) {
        return ;
      } else {
        throw exn;
      }
    }
    return result;
  };
  var __x = getValue(Caml_option.nullable_to_opt(document.getElementById("quantity")));
  var quantity = Belt_Option.flatMap(__x, toInt);
  var __x$1 = getValue(Caml_option.nullable_to_opt(document.getElementById("size")));
  var __x$2 = Belt_Option.flatMap(__x$1, shirtSizeOfString);
  var unitPrice = Belt_Option.map(__x$2, price);
  var totalPrice = unitPrice !== undefined && quantity !== undefined ? unitPrice * quantity : undefined;
  var priceString = totalPrice !== undefined ? totalPrice.toFixed(3) : "";
  var __x$3 = document.getElementById("price");
  Belt_Option.map((__x$3 == null) ? undefined : Caml_option.some(__x$3), (function (__x) {
          __x.innerText = priceString;
          return /* () */0;
        }));
  return /* () */0;
}

var calcButton = document.getElementById("calculate");

var quantityInput = document.getElementById("quantity");

var sizeInput = document.getElementById("size");

if (!(quantityInput == null)) {
  quantityInput.addEventListener("change", calculate);
}

if (!(sizeInput == null)) {
  sizeInput.addEventListener("change", calculate);
}

var D = /* alias */0;

var Doc = /* alias */0;

var Elem = /* alias */0;

var calcButton$1 = (calcButton == null) ? undefined : Caml_option.some(calcButton);

var quantityInput$1 = (quantityInput == null) ? undefined : Caml_option.some(quantityInput);

var sizeInput$1 = (sizeInput == null) ? undefined : Caml_option.some(sizeInput);

exports.D = D;
exports.Doc = Doc;
exports.Elem = Elem;
exports.price = price;
exports.shirtSizeOfString = shirtSizeOfString;
exports.calculate = calculate;
exports.calcButton = calcButton$1;
exports.quantityInput = quantityInput$1;
exports.sizeInput = sizeInput$1;
/* calcButton Not a pure module */
